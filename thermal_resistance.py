from tkinter import StringVar


class thermal_resistance:
    """
    Класс для расчета теплового сопротивления стен.
    """

    thermal_conduction = {
        "Железобетон": 1.92, "Бетон на гравии или щебне": 1.74, "Туфобетон": 0.87, "Пемзобетон": 0.62,
        "Бетон на вулканическом шлаке": 0.64, "Керамзитобетон": 0.8, "Керамзитобетон на кварцевом песке": 0.35, "Керамзитобетон на перлитровом песке": 0.35,
        "Шунгизитобетон": 0.56, "Перлитобетон": 0.44, "Шлакопемзобетон": 0.63, "Шлакопемзопено и шлакопемзогазобетон": 0.63,
        "Бетон на доменных гранулированных шлаках": 0.7, "Аглопоритобетоны": 0.85, "Бетон на зольном гравии": 0.52, "Вермикулитобетон": 0.23,
        "Газо- и пенобетон": 0.41, "Газо- и пенозолотобетон": 0.52, "Цеметнопесчанный": 0.76, "Сложный": 0.7,
        "Известковопесчанный": 0.7, "Цементношлаковый": 0.52, "Цементноперлитовый": 0.26, "Поризованный гипсоперлитовый": 0.15,
        "Плиты из гипса": 0.41, "Листы гипсовые обшивочные": 0.19, "Кирпичная кладка: глиняного обыкновенного": 0.7, "Кирпичная кладка: силикатного": 0.76,
        "Кирпичная кладка: трепельного": 0.47, "Кирпичная кладка: шлакового": 0.64, "Кирпичная кладка: керамического": 0.58, "Гранит, гнейс и базальт": 3.49,
        "Мрамор": 2.91, "Известняк": 1.16, "Туф": 0.93, "Сосна и ель": 0.14,
        "Дуб": 0.18, "Фанера клееная": 0.15, "Картон облицовочный": 0.21, "Плиты древесно-волокнистые": 0.23,
        "Плиты фибролитовые": 0.18, "Плиты камашытовые": 0.09, "Плиты минерально-ватные повышенной жесткости": 0.07, "Плиты из стеклянного штапельного волокна": 0.06,
        "Пенополистирол": 0.052, "Пенопласт": 0.06, "Пенополиуретан": 0.05, "Перлитопластбетон": 0.052,
        "Гравий керамзитовый": 0.21, "Гравий шунгизитовый": 0.2, "Щебень из доменного шлака": 0.21, "Щебень и песок из перлита": 0.111,
        "Вермикулит": 0.09, "Песок для строительных работ": 0.47, "Пено или газо стекло": 0.12, "Листы асбестоцементные": 0.47,
        "Битумы нефтяные строительные и кровельные": 0.27, "Асфальтобетон": 1.05, "Рубероид": 0.17, "Линолеум": 0.38,
        "Сталь стержневая": 58, "Чугун": 50, "Алюминий": 221, "Медь": 407,
        "Стекло оконное": 0.76,
    }

    def __init__(self, thicknesses: list[StringVar], materials: list[StringVar], heat_coefficient):
        self.thicknesses = thicknesses
        self.materials = materials
        self.heat_coefficient = heat_coefficient

    def calculate_resistance(self):
        """
        Метод для расчета теплового сопротивления стен.
        """

        return self.internal_resistance() + self.material_resistance() + self.external_resistance()

    def internal_resistance(self):
        """
        Метод для расчета внутреннего теплового сопротивления стен.
        """

        return 1 / 8.7

    def material_resistance(self):
        """
        Метод для расчета теплового сопротивления материалов стен.
        """

        sum_resistance = 0
        for material_idx in range(len(self.materials)):
            sum_resistance += float(self.thicknesses[material_idx].get()) / self.thermal_conduction[self.materials[material_idx].get()]
        return sum_resistance

    def external_resistance(self):
        """
        Метод для расчета внешнего теплового сопротивления стен.
        """

        return 1 / self.heat_coefficient
